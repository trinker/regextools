% Generated by roxygen2 (4.0.2): do not edit by hand
\name{test_extract}
\alias{test_extract}
\alias{test_is.regex}
\alias{test_remove}
\alias{test_split}
\title{Is Expression Valid and Does It Extract/Remove/Split as Expected?}
\usage{
test_extract(regex, input, output)

test_remove(regex, input, output)

test_split(regex, input, output)

test_is.regex(regex)
}
\arguments{
\item{regex}{A regular expression to test.}

\item{input}{The intput string(s) to extract/remove/split from.}

\item{output}{The desired output of:
\describe{
  \item{extract}{\code{regmatches(input, gregexpr(regex, input, perl = TRUE))}}
  \item{remove}{\code{gsub(regex, "", input, perl = TRUE)}}
  \item{split}{\code{strsplit(input, regex, perl = TRUE)}}
}}
}
\value{
Returns the results of \code{\link[base]{all.equal}} for the
\code{input} and desired \code{output}.
}
\description{
A logical test of a regular expression's validity, extraction, removal,
splitting results.  These functions are useful for unit testing of regular
expressions.
}
\details{
These functions are inspired by Hadely Wickham's \pkg{testthat}
package.  They can be used with \pkg{testthat} to test that regular
expressions are valid, extracting, removing, and splitting as expected.  The
user may create their own tests and utilize \code{\link[base]{all.equal}} to
ensure the expression is acting as desired.
}
\examples{
test_extract("\\\\w+", "I like candy.", list(c("I", "like", "candy")))

test_remove("^\\\\s+|\\\\s+$", " I like candy ", "I like candy")

test_split("(?<=[.?!])\\\\s+", "I see! When? Oh that's good.",
    list(c("I see!", "When?", "Oh that's good.")))

test_is.regex("\\\\w+")
}
\seealso{
\code{\link[base]{all.equal}},
\code{\link[base]{gsub}},
\code{\link[base]{gregexpr}},
\code{\link[base]{regmatches}},
\code{\link[devtools]{test}}
}
\keyword{extract}
\keyword{remove}
\keyword{test}

